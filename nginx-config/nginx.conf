user web;
worker_processes 1;
pid /var/run/nginx.pid;

load_module modules/ngx_http_headers_more_filter_module.so;
load_module modules/ngx_http_brotli_static_module.so;
load_module modules/ngx_http_brotli_filter_module.so;

events {
  worker_connections 20000;
}

http {
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;
  server_tokens off;

  include /etc/nginx/mime.types;
  types {
    application/vnd.apple.pkpass pkpass;
    font/ttf ttf;
    font/otf otf;
  }
  default_type application/octet-stream;

  access_log /var/log/access.log combined;
  error_log /var/log/error.log;

  # Set $remote_addr from our X-Client-IP header.
  real_ip_header X-Client-IP;
  set_real_ip_from 0.0.0.0/0;

  # Force nginx to only generate relative redirects.
  absolute_redirect off;

  # Tracking headers.
  more_set_headers "X-Platform-Processor: wi5esb6wgpd5g5dfdsoyeuntbu";
  # Remove the server header completely.
  more_set_headers "Server:";


  # Disable buffering of the *request* (\o/ thanks nginx 1.7.1).
  proxy_request_buffering off;
  fastcgi_request_buffering off;
  # Do not limit the body size.
  client_max_body_size 0;
  client_body_buffer_size 128k;

  # Disable buffering of the *response* too.
  proxy_buffering off;
  fastcgi_buffering off;
  # Increase the size of the initial buffer, used to read the response header.
  proxy_buffer_size 32k;
  fastcgi_buffer_size 32k;
  proxy_buffers 128 4k;
  fastcgi_buffers 128 4k;
  proxy_busy_buffers_size 32k;
  fastcgi_busy_buffers_size 32k;
  # Disable on-disk buffering.
  proxy_max_temp_file_size 0;
  fastcgi_max_temp_file_size 0;

  # Timeouts.
  # We timeout after 30s if the application cannot start processing the request...
  proxy_connect_timeout     30s;
  fastcgi_connect_timeout   30s;
  # ... but once the application started processing, we essentially never timeout.
  proxy_read_timeout        86400s;
  fastcgi_read_timeout      86400s;
  proxy_send_timeout        86400s;
  fastcgi_send_timeout      86400s;

  # Ignore all special upstream headers.
  proxy_ignore_headers X-Accel-Redirect X-Accel-Expires X-Accel-Limit-Rate
    X-Accel-Buffering X-Accel-Charset Expires Cache-Control Set-Cookie Vary;
  fastcgi_ignore_headers X-Accel-Redirect X-Accel-Expires X-Accel-Limit-Rate
    X-Accel-Buffering X-Accel-Charset Expires Cache-Control Set-Cookie Vary;

  client_body_temp_path /tmp/nginx/client_temp;
  proxy_temp_path /tmp/nginx/proxy_temp;
  fastcgi_temp_path /tmp/nginx/fastcgi_temp;
  uwsgi_temp_path /tmp/nginx/uwsgi_temp;
  scgi_temp_path /tmp/nginx/scgi_temp;

  map $http_x_client_ssl $platform_server_port {
    "on"      443;
    default   80;
  }

  # If the request has a Upgrade header, set Connection to "upgrade",
  # else force it as "Connection: close" to force the upstream to close the
  # connection.
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  # If the upstream is mapped, we give the default one through
  # another variable so that it can be used by the mapping. Otherwise
  # we map the address for proxy_pass/etc. Used by app/php.
  map '' $upstream_address {
    default unix:/run/app.sock;
  }


  server {
    listen 8080 default_server;

    gzip_static on;
    gzip_http_version 1.0;
    gzip_proxied any;
    gzip_vary on;
    gzip_comp_level 1;
    gzip_types application/ecmascript application/javascript application/json;
    gzip_types application/pdf application/postscript application/x-javascript;
    gzip_types image/svg+xml text/css text/csv text/javascript text/plain text/xml;

    brotli_static on;
    brotli_comp_level 3;  # Equivalent to gzip level 1, but often with a higher compression ratio.
    brotli_types application/ecmascript application/javascript application/json;
    brotli_types application/pdf application/postscript application/x-javascript;
    brotli_types image/svg+xml text/css text/csv text/javascript text/plain text/xml;

    # Avoid a configuration parse error when no passthru is used.
    set $_rewrite_path "";
    set $_rewrite_querystring "";
    location @rewrite {
          rewrite . $_rewrite_path;
    }
    location @rewrite_qs {
          rewrite . $_rewrite_path?$_rewrite_querystring;
    }



    location = "" {
      alias /app/public;


        set $_rewrite_path "/index.php";
        try_files       $uri @rewrite;
        expires         -1s;

    }


    location "/" {
      alias /app/public/;

      location "/" {

        set $_rewrite_path "/index.php";
        try_files       $uri @rewrite;
        expires         -1s;

      }



      location ~ ".+?\.php(?=$|/)" {

        set $_rewrite_path "/index.php";
        try_files       $fastcgi_script_name @rewrite;


        fastcgi_pass    $upstream_address;

        fastcgi_request_buffering on;
        client_max_body_size 262144000;

        set $_document_root $document_root;

        include         "fastcgi_params.normal";

        # Split the script name from the path info, set it as a variable so
        # that it persists after try_files has resolved the actual filename.
        fastcgi_split_path_info ^(.+?\.php(?=$|/))((?:/.*)?)$;
        set $path_info  $fastcgi_path_info;
      }

    }

    location = "/assets/shop" {
      alias /app/public/assets/shop;


        return          404;
        expires         2w;
        gzip            on;
        brotli          on;

    }


    location "/assets/shop/" {
      alias /app/public/assets/shop/;

      location "/assets/shop/" {

        return          404;
        expires         2w;
        gzip            on;
        brotli          on;

      }

      location ~ "\.(css|js|jpe?g|png|gif|svgz?|ico|bmp|tiff?|wbmp|ico|jng|bmp|html|pdf|otf|woff2|woff|eot|ttf|jar|swf|ogx|avi|wmv|asf|asx|mng|flv|webm|mov|ogv|mpe|mpe?g|mp4|3gpp|weba|ra|m4a|mp3|mp2|mpe?ga|midi?)$" {

      location ~ ".+?\.php(?=$|/)" {

        try_files       $fastcgi_script_name =404;


        fastcgi_pass    $upstream_address;

        fastcgi_request_buffering on;
        client_max_body_size 262144000;

        set $_document_root /app/public/;

        include         "fastcgi_params.normal";

        # Split the script name from the path info, set it as a variable so
        # that it persists after try_files has resolved the actual filename.
        fastcgi_split_path_info ^(.+?\.php(?=$|/))((?:/.*)?)$;
        set $path_info  $fastcgi_path_info;
      }

        location ~ "\.(css|js|jpe?g|png|gif|svgz?|ico|bmp|tiff?|wbmp|ico|jng|bmp|html|pdf|otf|woff2|woff|eot|ttf|jar|swf|ogx|avi|wmv|asf|asx|mng|flv|webm|mov|ogv|mpe|mpe?g|mp4|3gpp|weba|ra|m4a|mp3|mp2|mpe?ga|midi?)$" {

        try_files       $uri =404;
        expires         2w;
        gzip            on;
        brotli          on;

        }
      }


      location ~ ".+?\.php(?=$|/)" {

        try_files       $fastcgi_script_name =404;


        fastcgi_pass    $upstream_address;

        fastcgi_request_buffering on;
        client_max_body_size 262144000;

        set $_document_root /app/public/;

        include         "fastcgi_params.normal";

        # Split the script name from the path info, set it as a variable so
        # that it persists after try_files has resolved the actual filename.
        fastcgi_split_path_info ^(.+?\.php(?=$|/))((?:/.*)?)$;
        set $path_info  $fastcgi_path_info;
      }

    }

    location = "/media/cache" {
      alias /app/public/media/cache;


        return          404;
        expires         2w;
        gzip            on;
        brotli          on;

    }


    location "/media/cache/" {
      alias /app/public/media/cache/;

      location "/media/cache/" {

        return          404;
        expires         2w;
        gzip            on;
        brotli          on;

      }

      location ~ "\.(jpe?g|png|gif|svgz?)$" {

      location ~ ".+?\.php(?=$|/)" {

        try_files       $fastcgi_script_name =404;


        fastcgi_pass    $upstream_address;

        fastcgi_request_buffering on;
        client_max_body_size 262144000;

        set $_document_root /app/public/;

        include         "fastcgi_params.normal";

        # Split the script name from the path info, set it as a variable so
        # that it persists after try_files has resolved the actual filename.
        fastcgi_split_path_info ^(.+?\.php(?=$|/))((?:/.*)?)$;
        set $path_info  $fastcgi_path_info;
      }

        location ~ "\.(jpe?g|png|gif|svgz?)$" {

        try_files       $uri =404;
        expires         2w;
        gzip            on;
        brotli          on;

        }
      }


      location ~ ".+?\.php(?=$|/)" {

        try_files       $fastcgi_script_name =404;


        fastcgi_pass    $upstream_address;

        fastcgi_request_buffering on;
        client_max_body_size 262144000;

        set $_document_root /app/public/;

        include         "fastcgi_params.normal";

        # Split the script name from the path info, set it as a variable so
        # that it persists after try_files has resolved the actual filename.
        fastcgi_split_path_info ^(.+?\.php(?=$|/))((?:/.*)?)$;
        set $path_info  $fastcgi_path_info;
      }

    }

    location = "/media/cache/resolve" {
      alias /app/public/media/cache/resolve;


        set $_rewrite_path "/index.php";
        try_files       $uri @rewrite;
        expires         -1s;

    }


    location "/media/cache/resolve/" {
      alias /app/public/media/cache/resolve/;

      location "/media/cache/resolve/" {

        set $_rewrite_path "/index.php";
        try_files       $uri @rewrite;
        expires         -1s;

      }



      location ~ ".+?\.php(?=$|/)" {

        set $_rewrite_path "/index.php";
        try_files       $fastcgi_script_name @rewrite;


        fastcgi_pass    $upstream_address;

        fastcgi_request_buffering on;
        client_max_body_size 262144000;

        set $_document_root /app/public/;

        include         "fastcgi_params.normal";

        # Split the script name from the path info, set it as a variable so
        # that it persists after try_files has resolved the actual filename.
        fastcgi_split_path_info ^(.+?\.php(?=$|/))((?:/.*)?)$;
        set $path_info  $fastcgi_path_info;
      }

    }

    location = "/media/image" {
      alias /app/public/media/image;


        return          404;
        expires         2w;
        gzip            on;
        brotli          on;

    }


    location "/media/image/" {
      alias /app/public/media/image/;

      location "/media/image/" {

        return          404;
        expires         2w;
        gzip            on;
        brotli          on;

      }

      location ~ "\.(jpe?g|png|gif|svgz?)$" {

      location ~ ".+?\.php(?=$|/)" {

        try_files       $fastcgi_script_name =404;


        fastcgi_pass    $upstream_address;

        fastcgi_request_buffering on;
        client_max_body_size 262144000;

        set $_document_root /app/public/;

        include         "fastcgi_params.normal";

        # Split the script name from the path info, set it as a variable so
        # that it persists after try_files has resolved the actual filename.
        fastcgi_split_path_info ^(.+?\.php(?=$|/))((?:/.*)?)$;
        set $path_info  $fastcgi_path_info;
      }

        location ~ "\.(jpe?g|png|gif|svgz?)$" {

        try_files       $uri =404;
        expires         2w;
        gzip            on;
        brotli          on;

        }
      }


      location ~ ".+?\.php(?=$|/)" {

        try_files       $fastcgi_script_name =404;


        fastcgi_pass    $upstream_address;

        fastcgi_request_buffering on;
        client_max_body_size 262144000;

        set $_document_root /app/public/;

        include         "fastcgi_params.normal";

        # Split the script name from the path info, set it as a variable so
        # that it persists after try_files has resolved the actual filename.
        fastcgi_split_path_info ^(.+?\.php(?=$|/))((?:/.*)?)$;
        set $path_info  $fastcgi_path_info;
      }

    }

    location = "/media" {
      alias /app/public/media;


        set $_rewrite_path "/index.php";
        try_files       $uri @rewrite;
        expires         -1s;

    }


    location "/media/" {
      alias /app/public/media/;

      location "/media/" {

        set $_rewrite_path "/index.php";
        try_files       $uri @rewrite;
        expires         -1s;

      }




    }

    # Error pages.
    error_page 400 /_/errors/400.html;
    error_page 401 /_/errors/401.html;
    error_page 402 /_/errors/402.html;
    error_page 403 /_/errors/403.html;
    error_page 404 /_/errors/404.html;
    error_page 405 /_/errors/405.html;
    error_page 406 /_/errors/406.html;
    error_page 408 /_/errors/408.html;
    error_page 409 /_/errors/409.html;
    error_page 410 /_/errors/410.html;
    error_page 411 /_/errors/411.html;
    error_page 412 /_/errors/412.html;
    error_page 413 /_/errors/413.html;
    error_page 414 /_/errors/414.html;
    error_page 415 /_/errors/415.html;
    error_page 416 /_/errors/416.html;
    error_page 421 /_/errors/421.html;
    error_page 494 /_/errors/494.html;
    error_page 495 /_/errors/495.html;
    error_page 496 /_/errors/496.html;
    error_page 497 /_/errors/497.html;
    error_page 500 /_/errors/500.html;
    error_page 501 /_/errors/501.html;
    error_page 502 /_/errors/502.html;
    error_page 503 /_/errors/503.html;
    error_page 504 /_/errors/504.html;
    error_page 507 /_/errors/507.html;

    location "/_/errors" {
      internal;
      alias /run/errors;
    }
  }
}
